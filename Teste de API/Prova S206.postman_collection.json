{
	"info": {
		"_postman_id": "a07b1f87-36c6-4074-b2f3-e8d18f28abeb",
		"name": "Prova S206",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39317522"
	},
	"item": [
		{
			"name": "Listar todos os produtos (Positivo)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is an array\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"pm.test(\"All products have necessary fields\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    jsonData.forEach((product) => {\r",
							"        pm.expect(product).to.have.property(\"id\");\r",
							"        pm.expect(product).to.have.property(\"title\");\r",
							"        pm.expect(product).to.have.property(\"price\");\r",
							"        pm.expect(product).to.have.property(\"description\");\r",
							"        pm.expect(product).to.have.property(\"category\");\r",
							"        pm.expect(product).to.have.property(\"image\");\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fakestoreapi.com/products",
					"protocol": "https",
					"host": [
						"fakestoreapi",
						"com"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cria um novo produto (Positivo)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has all necessary fields\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"id\");\r",
							"    pm.expect(jsonData).to.have.property(\"title\", \"iPhone 16\");\r",
							"    pm.expect(jsonData).to.have.property(\"price\", 800);\r",
							"    pm.expect(jsonData).to.have.property(\"description\", \"Smarthphone Apple iPhone 16\");\r",
							"    pm.expect(jsonData).to.have.property(\"image\", \"https://example.com/imagem.jpg\");\r",
							"    pm.expect(jsonData).to.have.property(\"category\", \"electronics\");\r",
							"});\r",
							"\r",
							"pm.test(\"Product ID is a number\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.be.a(\"number\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"iPhone 16\",\r\n    \"price\": 800.00,\r\n    \"description\": \"Smarthphone Apple iPhone 16\",\r\n    \"image\": \"https://example.com/imagem.jpg\",\r\n    \"category\": \"electronics\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fakestoreapi.com/products",
					"protocol": "https",
					"host": [
						"fakestoreapi",
						"com"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Acessar um endpoint inválido (Negativo)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(404);  // Verifica se o status code é 404\r",
							"});\r",
							"\r",
							"pm.test(\"Response is HTML\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/html\");  // Verifica se o tipo de conteúdo é HTML\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains error message 'Cannot GET /produtos'\", function () {\r",
							"    const responseBody = pm.response.text();\r",
							"    pm.expect(responseBody).to.include(\"Cannot GET /produtos\");  // Verifica se a mensagem de erro está no corpo da resposta\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fakestoreapi.com/produtos",
					"protocol": "https",
					"host": [
						"fakestoreapi",
						"com"
					],
					"path": [
						"produtos"
					]
				}
			},
			"response": []
		}
	]
}